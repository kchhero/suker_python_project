#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <errno.h>

#define TRUE 1
#define FALSE 0

#define SIZE 4000

static char textChar[SIZE+1];
static int textInt[SIZE+1];
static int realCntInt;
static int key[3];
static int maxCnt = 0;

static void decode(int *text);
static void ppppp(void);

void readTextAndSet(void)
{
	FILE *fp;

	fp = fopen("my_problem_59_cipher1.txt","r");
	if(fp != NULL)
	{
		fread(textChar, sizeof(char), SIZE, fp);

		fclose(fp);
	}
	else {
		printf("file open failed!\n");
	}
}

void convertInt(void)
{
	int i;
	char temp[3];
	int tempCnt = 0;
	int textIntCnt = 0;

	for (i = 0; i < SIZE; i++)
	{
		if (textChar[i] != ',' && textChar[i] != 0x0A)
		{
			temp[tempCnt++] = textChar[i];
		}
		else	{
			if (tempCnt == 3)	{
				 textInt[textIntCnt++] = (int)(temp[0] - 48)*100 + (int)(temp[1] - 48)*10 + (int)(temp[2] - 48);
			}
			else if (tempCnt == 2)	{
				 textInt[textIntCnt++] = (int)(temp[0] - 48)*10 + (int)(temp[1] - 48);
			}
			else if (tempCnt == 1)	{
				 textInt[textIntCnt++] = (int)(temp[0] - 48);
			}
			tempCnt = 0;

			if (textChar[i] == 0x0A)	{
				realCntInt = textIntCnt;
				return ;
			}
		}
	}
}

void main(void)
{	
	int i;	
	
	readTextAndSet();
	convertInt();

	decode(textInt);
	for (i = 0; i < realCntInt; i++)
	{
		printf("%c", ((textInt[i]^key[0])^key[1])^key[2]);
	}
	
	printf("\n----------maxCnt = %d--------\n", maxCnt);
	printf("\n----------end--------\n");
	system("pause");
}

static void decode(int *text)
{
	int temp;	
	int cnt=0;
	int i,j,k,n;
	

	for (i = 97; i <= 122; i++)
	{
		for (j = 97; j <= 122; j++)
		{	
			for (k = 97; k <= 122; k++)
			{
				for (n = 0; n < realCntInt; n++)	{
					temp = text[n]^i;
					temp = temp^j;
					temp = temp^k;

					//if (!(temp == 32 || temp == 44 || temp == 46 || temp == 34 || temp == 39 || temp == 40 || temp == 41 || temp == 33 || (temp >= 65 && temp <= 90) || (temp >= 97 && temp <= 122)))		{		
					if (temp >= 127 || (temp >=14 && temp <= 31) || (temp >= 1 && temp <= 9))	{
						//cnt = 0;
						//n = realCntInt;
						;
					}
					else	{
						cnt++;
					}
				}

				if (maxCnt < cnt)
					maxCnt = cnt;
				
				//if (cnt >= realCntInt-1)
				if (cnt >= 1197)
				{
					key[0] = i;
					key[1] = j;
					key[2] = k;
					ppppp();
				}
				cnt = 0;
			}
		}
	}
}

static void ppppp(void)
{
	int i;
	int temp;

	for (i = 0; i < realCntInt; i++)
	{
		temp = textInt[i]^key[0];
		temp = temp^key[1];
		temp = temp^key[2];
		printf("%c", temp);
	}

	printf("\n\n\n");
}