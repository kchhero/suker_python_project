#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <errno.h>

#define TRUE 1
#define FALSE 0

#define SQ(x) ((x)*(x))

#define NUM_SIZE 50

static unsigned long facto(unsigned long num);
static unsigned int numbers[100]={0,};
static unsigned int carry[NUM_SIZE]={0,};
static unsigned int result[NUM_SIZE]={0,};

void main(void)
{
	unsigned int i,j,k;
	unsigned long temp=0;
	unsigned long temp2=0;
	unsigned int oldCarry = 0;
	unsigned count =0;

	result[NUM_SIZE-1]=1;

	for (i = 0; i  < 100; i++)	{
		numbers[i] = i+1;
	}
	/*
	for (i = 0; i < 100-1; i++)	{
		if (numbers[i] == 0)
			continue;

		for (j = 1; j < 100; j++)	{
			if (numbers[j] == 0)
				continue;

			if ((numbers[i]*numbers[j])%10 == 0)	{
				numbers[i] = 0;
				numbers[j] = 0;
				j = 100;
			}
		}
	}*/
	for (i = 0; i < 100; i++)	{
		if (numbers[i] == 10 || numbers[i] == 100 || numbers[i] == 2 || numbers[i] == 50 || numbers[i] == 4 || numbers[i] == 25 || numbers[i] == 20 || numbers[i] == 5 ||
			numbers[i] == 1)
			numbers[i] = 0;
	}

	for (i = 0; i  < 100; i++)	{
		if (numbers[i] != 0)	{
			for (j = NUM_SIZE-1; j > 0; j--)	{
				temp = result[j] * numbers[i];	// 각 자릿수의 곱셈
				if (temp == 0)
					continue;
				oldCarry = result[j-1];
				if (temp >= 10000)	{
					carry[j-1] = temp/10000;	//자릿수 증가
					temp -= (temp/10000)*10000;
				}

				result[j] = temp;

				if (oldCarry == 0)	{
					for (k = NUM_SIZE-1; k > 0; k--)	{
						result[k] += carry[k];
						carry[k] = 0;
					}					
					break;
				}
			}
			for(k = 0; k < NUM_SIZE; k++)	{
				printf("%d ", result[k]);
			}
			printf("\n");
		}
	}

	for(k = 0; k < NUM_SIZE; k++)	{
		if (result[k] == 0)
			continue;

		count += result[k]/1000;
		count += (result[k]%1000)/100;
		count += ((result[k]%100)/10);
		count += result[k]%10;
	}

	//factorial = facto(10);
	//printf("%d\n", factorial);	
	system("pause");
}

static unsigned long facto(unsigned long num)
{		
	if (num != 0)
		return num*facto(num-1);
	else
		return 1;
}

