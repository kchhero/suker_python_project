#!/usr/bin/env python
# -*- coding: CP949 -*-
#
# generated by wxGlade 0.7.0 on Tue Aug 25 16:50:00 2015
#

import wx

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
import subprocess
# end wxGlade


class AbstractorShell(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: AbstractorShell.__init__
        kwds["style"] = wx.CAPTION | wx.CLOSE_BOX | wx.MAXIMIZE_BOX | wx.MINIMIZE_BOX | wx.RESIZE_BORDER | wx.SYSTEM_MENU
        wx.Frame.__init__(self, *args, **kwds)
        self.label_RamDumpPath = wx.StaticText(self, wx.ID_ANY, _(" RamDumpPath"))
        self.text_ctrl_RamDumpPath = wx.TextCtrl(self, wx.ID_ANY, "")
        self.label_upper_right_empty = wx.StaticText(self, wx.ID_ANY, "")
        self.button_RamDumpPath = wx.Button(self, wx.ID_ANY, _("..."))
        self.label_outpath = wx.StaticText(self, wx.ID_ANY, _("OutPath"))
        self.text_ctrl_outpath = wx.TextCtrl(self, wx.ID_ANY, "")
        self.button_outpath = wx.Button(self, wx.ID_ANY, _("..."))
        self.label_8 = wx.StaticText(self, wx.ID_ANY, _("Linux Version Infomation"))
        self.text_ctrl_lvi = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_MULTILINE | wx.TE_READONLY | wx.TE_RICH | wx.TE_RICH2)
        self.button_lvi = wx.Button(self, wx.ID_ANY, _("Run"))
        self.label_ramoops = wx.StaticText(self, wx.ID_ANY, _("Ramoops"))
        self.label_ramoops_addr = wx.StaticText(self, wx.ID_ANY, _("ADDRESS"))
        self.label_ramoops_size = wx.StaticText(self, wx.ID_ANY, _("SIZE"))
        self.label_empth_ramoops2 = wx.StaticText(self, wx.ID_ANY, "")
        self.label_empty_ramoops = wx.StaticText(self, wx.ID_ANY, _("==> Hex Type"))
        self.text_ctrl_ramoops_address = wx.TextCtrl(self, wx.ID_ANY, "")
        self.text_ctrl_ramoops_size = wx.TextCtrl(self, wx.ID_ANY, "")
        self.button_ramoops = wx.Button(self, wx.ID_ANY, _("Run"))
        self.label_1 = wx.StaticText(self, wx.ID_ANY, _("TBD"))
        self.button_OpenOutFolder = wx.Button(self, wx.ID_ANY, _("Open Out Dir"))
        self.label_lower_empty1 = wx.StaticText(self, wx.ID_ANY, "")
        self.label_lower_sukerMark = wx.StaticText(self, wx.ID_ANY, _("Created by SUKER Version 0.9.0     since Nov. 2015     "), style=wx.ALIGN_RIGHT)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.OnSetPath, self.button_RamDumpPath)
        self.Bind(wx.EVT_BUTTON, self.doOutpath, self.button_outpath)
        self.Bind(wx.EVT_BUTTON, self.doLVI, self.button_lvi)
        self.Bind(wx.EVT_BUTTON, self.doRamoops, self.button_ramoops)
        self.Bind(wx.EVT_BUTTON, self.OnOpenFolder, self.button_OpenOutFolder)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: AbstractorShell.__set_properties
        self.SetTitle(_("Suker RamDump Abstractor"))
        self.SetSize((639, 421))
        self.SetBackgroundColour(wx.Colour(204, 127, 50))
        self.button_RamDumpPath.SetBackgroundColour(wx.Colour(0, 255, 255))
        self.label_outpath.SetBackgroundColour(wx.Colour(204, 127, 50))
        self.button_outpath.SetBackgroundColour(wx.Colour(0, 255, 255))
        self.label_8.SetBackgroundColour(wx.Colour(204, 127, 50))
        self.button_lvi.SetBackgroundColour(wx.Colour(0, 255, 255))
        self.label_ramoops.SetBackgroundColour(wx.Colour(204, 127, 50))
        self.label_ramoops_addr.SetBackgroundColour(wx.Colour(204, 127, 50))
        self.label_ramoops_size.SetBackgroundColour(wx.Colour(204, 127, 50))
        self.label_empth_ramoops2.SetBackgroundColour(wx.Colour(204, 127, 50))
        self.label_empty_ramoops.SetBackgroundColour(wx.Colour(204, 127, 50))
        self.button_ramoops.SetBackgroundColour(wx.Colour(0, 255, 255))
        self.button_OpenOutFolder.SetBackgroundColour(wx.Colour(0, 255, 255))
        self.label_lower_empty1.SetBackgroundColour(wx.Colour(204, 127, 50))
        self.label_lower_sukerMark.SetFont(wx.Font(9, wx.DEFAULT, wx.ITALIC, wx.NORMAL, 0, ""))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: AbstractorShell.__do_layout
        sizer_whole = wx.BoxSizer(wx.VERTICAL)
        sizer_main = wx.BoxSizer(wx.VERTICAL)
        sizer_lower = wx.BoxSizer(wx.HORIZONTAL)
        sizer_middle = wx.BoxSizer(wx.HORIZONTAL)
        sizer_body = wx.BoxSizer(wx.VERTICAL)
        sizer_ramoops = wx.BoxSizer(wx.VERTICAL)
        sizer_ramoops2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_ramoops1 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_LVI = wx.BoxSizer(wx.VERTICAL)
        sizer_LVI2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_outpath = wx.BoxSizer(wx.VERTICAL)
        sizer_outpath2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_upper = wx.BoxSizer(wx.HORIZONTAL)
        sizer_upper_right = wx.BoxSizer(wx.VERTICAL)
        sizer_upper_left = wx.BoxSizer(wx.VERTICAL)
        sizer_upper_left.Add(self.label_RamDumpPath, 0, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND | wx.TOP, 3)
        sizer_upper_left.Add(self.text_ctrl_RamDumpPath, 0, wx.ALL | wx.EXPAND, 3)
        sizer_upper.Add(sizer_upper_left, 80, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_upper_right.Add(self.label_upper_right_empty, 0, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 3)
        sizer_upper_right.Add(self.button_RamDumpPath, 0, wx.ALL | wx.EXPAND, 3)
        sizer_upper.Add(sizer_upper_right, 20, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_main.Add(sizer_upper, 15, wx.ALL | wx.EXPAND, 3)
        sizer_outpath.Add(self.label_outpath, 0, wx.ALIGN_BOTTOM | wx.ALL, 6)
        sizer_outpath2.Add(self.text_ctrl_outpath, 80, wx.ALIGN_RIGHT | wx.BOTTOM | wx.LEFT | wx.RIGHT, 6)
        sizer_outpath2.Add(self.button_outpath, 20, wx.ALIGN_RIGHT | wx.LEFT | wx.RIGHT, 6)
        sizer_outpath.Add(sizer_outpath2, 1, wx.ALL | wx.EXPAND, 0)
        sizer_body.Add(sizer_outpath, 15, wx.ALL | wx.EXPAND, 2)
        sizer_LVI.Add(self.label_8, 0, wx.ALIGN_BOTTOM | wx.ALL, 6)
        sizer_LVI2.Add(self.text_ctrl_lvi, 80, wx.ALIGN_RIGHT | wx.ALL, 6)
        sizer_LVI2.Add(self.button_lvi, 20, wx.ALIGN_RIGHT | wx.LEFT | wx.RIGHT | wx.TOP, 6)
        sizer_LVI.Add(sizer_LVI2, 1, wx.ALL | wx.EXPAND, 0)
        sizer_body.Add(sizer_LVI, 25, wx.ALL | wx.EXPAND, 2)
        sizer_ramoops1.Add(self.label_ramoops, 20, wx.ALIGN_CENTER | wx.LEFT | wx.RIGHT | wx.TOP, 6)
        sizer_ramoops1.Add(self.label_ramoops_addr, 30, wx.ALIGN_BOTTOM | wx.LEFT | wx.RIGHT | wx.TOP, 6)
        sizer_ramoops1.Add(self.label_ramoops_size, 30, wx.ALIGN_BOTTOM | wx.LEFT | wx.RIGHT | wx.TOP, 6)
        sizer_ramoops1.Add(self.label_empth_ramoops2, 20, wx.ALL | wx.EXPAND, 6)
        sizer_ramoops.Add(sizer_ramoops1, 40, wx.ALL | wx.EXPAND, 0)
        sizer_ramoops2.Add(self.label_empty_ramoops, 20, wx.ALL | wx.EXPAND, 6)
        sizer_ramoops2.Add(self.text_ctrl_ramoops_address, 30, wx.ALIGN_RIGHT | wx.ALL, 6)
        sizer_ramoops2.Add(self.text_ctrl_ramoops_size, 30, wx.ALIGN_RIGHT | wx.ALL, 6)
        sizer_ramoops2.Add(self.button_ramoops, 20, wx.ALIGN_RIGHT | wx.LEFT | wx.RIGHT | wx.TOP, 6)
        sizer_ramoops.Add(sizer_ramoops2, 60, wx.ALL | wx.EXPAND, 0)
        sizer_body.Add(sizer_ramoops, 25, wx.ALL | wx.EXPAND, 2)
        sizer_body.Add(self.label_1, 10, wx.ALL | wx.EXPAND, 2)
        sizer_body.Add(self.button_OpenOutFolder, 15, wx.ALIGN_CENTER | wx.ALIGN_RIGHT | wx.ALL, 2)
        sizer_middle.Add(sizer_body, 1, wx.ALL | wx.EXPAND, 0)
        sizer_main.Add(sizer_middle, 75, wx.ALL | wx.EXPAND, 0)
        sizer_lower.Add(self.label_lower_empty1, 50, wx.EXPAND, 3)
        sizer_lower.Add(self.label_lower_sukerMark, 50, wx.EXPAND, 3)
        sizer_main.Add(sizer_lower, 10, wx.ALL | wx.EXPAND, 1)
        sizer_whole.Add(sizer_main, 1, wx.ALL | wx.EXPAND, 0)
        self.SetSizer(sizer_whole)
        self.Layout()
        # end wxGlade

    def OnSetPath(self, event):  # wxGlade: AbstractorShell.<event_handler>
        print "Event handler 'OnSetPath' not implemented!"
        event.Skip()

    def doOutpath(self, event):  # wxGlade: AbstractorShell.<event_handler>
        print "Event handler 'doOutpath' not implemented!"
        event.Skip()

    def doLVI(self, event):  # wxGlade: AbstractorShell.<event_handler>
        print "Event handler 'doLVI' not implemented!"
        event.Skip()

    def doRamoops(self, event):  # wxGlade: AbstractorShell.<event_handler>
        print "Event handler 'doRamoops' not implemented!"
        event.Skip()

    def OnOpenFolder(self, event):  # wxGlade: AbstractorShell.<event_handler>
        print "Event handler 'OnOpenFolder' not implemented!"
        event.Skip()

# end of class AbstractorShell
