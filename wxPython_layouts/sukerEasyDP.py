#!/usr/bin/env python
# -*- coding: CP949 -*-
#
# generated by wxGlade 0.6.8 (standalone edition) on Fri Oct 10 16:22:47 2014
#

import wx

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MyFrame1(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame1.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.label_qpst_sahara_dir = wx.StaticText(self, wx.ID_ANY, _("QPST Sahara Dir"))
        self.button_copyToDump = wx.Button(self, wx.ID_ANY, _("Copy To Dump Dir"))
        self.text_ctrl_qpst_sahara_dir = wx.TextCtrl(self, wx.ID_ANY, "")
        self.button_qpst_sahara_dir = wx.Button(self, wx.ID_ANY, _("..."))
        self.label_parser_dir = wx.StaticText(self, wx.ID_ANY, _("Ramdump Parser Dir"))
        self.label_parser_TBD = wx.StaticText(self, wx.ID_ANY, "")
        self.text_ctrl_parser_dir = wx.TextCtrl(self, wx.ID_ANY, "")
        self.button_parser_open_dir = wx.Button(self, wx.ID_ANY, _("..."))
        self.label_dump_files_dir = wx.StaticText(self, wx.ID_ANY, _("Dump Files Dir"))
        self.label_dump_files_TBD = wx.StaticText(self, wx.ID_ANY, "")
        self.text_ctrl_dump_dir = wx.TextCtrl(self, wx.ID_ANY, "")
        self.button_dump_dir = wx.Button(self, wx.ID_ANY, _("..."))
        self.label_vmlinux_dir = wx.StaticText(self, wx.ID_ANY, _("Vmlinux Dir"))
        self.label_vmlinux_dir_TBD = wx.StaticText(self, wx.ID_ANY, "")
        self.text_ctrl_vmlinux_dir = wx.TextCtrl(self, wx.ID_ANY, "")
        self.button_vmlinux_dir = wx.Button(self, wx.ID_ANY, _("..."))
        self.label_options = wx.StaticText(self, wx.ID_ANY, _("   Ramdump options"))
        self.checkbox_all = wx.CheckBox(self, wx.ID_ANY, _("--everything (All)"))
        self.label_info1 = wx.StaticText(self, wx.ID_ANY, _("-> default enabled options : "))
        self.label_info2 = wx.StaticText(self, wx.ID_ANY, _("-w -d -t -i -q -s"))
        self.label_outdir = wx.StaticText(self, wx.ID_ANY, "")
        self.button_run = wx.Button(self, wx.ID_ANY, _("RUN"))
        self.button_got32 = wx.Button(self, wx.ID_ANY, _("Go T32 (sim)"))
        self.button_open_dumpDir = wx.Button(self, wx.ID_ANY, _("Open Dump Folder"))
        self.text_ctrl_1 = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_MULTILINE | wx.TE_RICH | wx.TE_RICH2 | wx.TE_LINEWRAP | wx.TE_WORDWRAP)
        self.label_MySignature = wx.StaticText(self, wx.ID_ANY, _("      Created by Suker version 0.9.0   since 2014.04.04"))
        self.gauge_xxx = wx.Gauge(self, wx.ID_ANY, 10, style=wx.GA_HORIZONTAL | wx.GA_SMOOTH)
        self.label_status = wx.StaticText(self, wx.ID_ANY, _("Status"), style=wx.ALIGN_CENTRE)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.OnDumpFilesCopy, self.button_copyToDump)
        self.Bind(wx.EVT_BUTTON, self.OnSetPath, self.button_qpst_sahara_dir)
        self.Bind(wx.EVT_BUTTON, self.OnSetPath, self.button_parser_open_dir)
        self.Bind(wx.EVT_BUTTON, self.OnSetPath, self.button_dump_dir)
        self.Bind(wx.EVT_BUTTON, self.OnSetPath, self.button_vmlinux_dir)
        self.Bind(wx.EVT_CHECKBOX, self.OnCheckBoxSelect, self.checkbox_all)
        self.Bind(wx.EVT_BUTTON, self.OnParsing, self.button_run)
        self.Bind(wx.EVT_BUTTON, self.OnGoT32, self.button_got32)
        self.Bind(wx.EVT_BUTTON, self.OnOpenFolder, self.button_open_dumpDir)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame1.__set_properties
        self.SetTitle(_("sukerEasyRamdumpParserRunner"))
        self.SetSize((640, 536))
        self.SetBackgroundColour(wx.SystemSettings_GetColour(wx.SYS_COLOUR_3DFACE))
        self.text_ctrl_1.SetMinSize((622, 80))
        self.label_MySignature.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_status.SetBackgroundColour(wx.Colour(142, 35, 35))
        self.label_status.SetForegroundColour(wx.Colour(255, 255, 255))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame1.__do_layout
        MainSizer = wx.BoxSizer(wx.VERTICAL)
        MainMainSizer = wx.BoxSizer(wx.VERTICAL)
        sizer_1 = wx.BoxSizer(wx.HORIZONTAL)
        buttons_box = wx.BoxSizer(wx.HORIZONTAL)
        options_box = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_options_right = wx.GridSizer(2, 3, 0, 0)
        vmlinux_dir = wx.BoxSizer(wx.VERTICAL)
        sizer_vmlinux_down = wx.BoxSizer(wx.HORIZONTAL)
        sizer_vmlinux_up = wx.BoxSizer(wx.HORIZONTAL)
        dump_dir = wx.BoxSizer(wx.VERTICAL)
        sizer_dump_down = wx.BoxSizer(wx.HORIZONTAL)
        sizer_dump_up = wx.BoxSizer(wx.HORIZONTAL)
        parser_dir = wx.BoxSizer(wx.VERTICAL)
        sizer_parser_down = wx.BoxSizer(wx.HORIZONTAL)
        sizer_parser_dir_up = wx.BoxSizer(wx.HORIZONTAL)
        qpst_sahara_dir = wx.BoxSizer(wx.VERTICAL)
        sizer_qpst_sahara_dir_down = wx.BoxSizer(wx.HORIZONTAL)
        sizer_qpst_sahara_dir_up = wx.BoxSizer(wx.HORIZONTAL)
        sizer_qpst_sahara_dir_up.Add(self.label_qpst_sahara_dir, 7, wx.ALL | wx.ALIGN_BOTTOM, 3)
        sizer_qpst_sahara_dir_up.Add(self.button_copyToDump, 2, wx.ALL | wx.EXPAND, 3)
        qpst_sahara_dir.Add(sizer_qpst_sahara_dir_up, 1, wx.EXPAND, 0)
        sizer_qpst_sahara_dir_down.Add(self.text_ctrl_qpst_sahara_dir, 7, wx.ALL | wx.EXPAND | wx.ALIGN_BOTTOM, 3)
        sizer_qpst_sahara_dir_down.Add(self.button_qpst_sahara_dir, 2, wx.ALL | wx.EXPAND, 3)
        qpst_sahara_dir.Add(sizer_qpst_sahara_dir_down, 1, wx.EXPAND, 0)
        MainMainSizer.Add(qpst_sahara_dir, 12, wx.ALL | wx.EXPAND, 0)
        sizer_parser_dir_up.Add(self.label_parser_dir, 7, wx.ALL | wx.ALIGN_BOTTOM, 3)
        sizer_parser_dir_up.Add(self.label_parser_TBD, 3, wx.ALL, 3)
        parser_dir.Add(sizer_parser_dir_up, 1, wx.ALL | wx.EXPAND, 0)
        sizer_parser_down.Add(self.text_ctrl_parser_dir, 7, wx.ALL | wx.EXPAND, 3)
        sizer_parser_down.Add(self.button_parser_open_dir, 2, wx.ALL | wx.EXPAND, 3)
        parser_dir.Add(sizer_parser_down, 1, wx.EXPAND, 0)
        MainMainSizer.Add(parser_dir, 12, wx.ALL | wx.EXPAND, 0)
        sizer_dump_up.Add(self.label_dump_files_dir, 7, wx.ALL | wx.ALIGN_BOTTOM, 3)
        sizer_dump_up.Add(self.label_dump_files_TBD, 3, wx.ALL, 3)
        dump_dir.Add(sizer_dump_up, 1, wx.EXPAND, 0)
        sizer_dump_down.Add(self.text_ctrl_dump_dir, 7, wx.ALL | wx.EXPAND, 3)
        sizer_dump_down.Add(self.button_dump_dir, 2, wx.ALL | wx.EXPAND, 3)
        dump_dir.Add(sizer_dump_down, 1, wx.EXPAND, 0)
        MainMainSizer.Add(dump_dir, 12, wx.ALL | wx.EXPAND, 0)
        sizer_vmlinux_up.Add(self.label_vmlinux_dir, 7, wx.ALL | wx.ALIGN_BOTTOM, 3)
        sizer_vmlinux_up.Add(self.label_vmlinux_dir_TBD, 3, wx.ALL, 3)
        vmlinux_dir.Add(sizer_vmlinux_up, 1, wx.EXPAND, 0)
        sizer_vmlinux_down.Add(self.text_ctrl_vmlinux_dir, 7, wx.ALL | wx.EXPAND, 3)
        sizer_vmlinux_down.Add(self.button_vmlinux_dir, 2, wx.ALL | wx.EXPAND, 3)
        vmlinux_dir.Add(sizer_vmlinux_down, 1, wx.EXPAND, 0)
        MainMainSizer.Add(vmlinux_dir, 12, wx.ALL | wx.EXPAND, 0)
        options_box.Add(self.label_options, 2, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 2)
        grid_sizer_options_right.Add(self.checkbox_all, 0, wx.ALL, 3)
        grid_sizer_options_right.Add(self.label_info1, 0, wx.ALL | wx.EXPAND, 3)
        grid_sizer_options_right.Add(self.label_info2, 0, wx.ALL | wx.EXPAND, 3)
        grid_sizer_options_right.Add(self.label_outdir, 0, 0, 0)
        options_box.Add(grid_sizer_options_right, 8, wx.ALL | wx.EXPAND, 5)
        MainMainSizer.Add(options_box, 10, wx.ALL | wx.EXPAND, 0)
        buttons_box.Add(self.button_run, 4, wx.ALL | wx.EXPAND, 3)
        buttons_box.Add(self.button_got32, 3, wx.ALL | wx.EXPAND, 3)
        buttons_box.Add(self.button_open_dumpDir, 3, wx.ALL | wx.EXPAND, 3)
        MainMainSizer.Add(buttons_box, 9, wx.ALL | wx.EXPAND, 2)
        MainMainSizer.Add(self.text_ctrl_1, 15, wx.ALL | wx.EXPAND, 3)
        sizer_1.Add(self.label_MySignature, 70, wx.ALL | wx.EXPAND, 3)
        sizer_1.Add(self.gauge_xxx, 20, wx.EXPAND, 0)
        sizer_1.Add(self.label_status, 10, wx.ALL | wx.EXPAND, 3)
        MainMainSizer.Add(sizer_1, 4, wx.EXPAND, 0)
        MainSizer.Add(MainMainSizer, 1, wx.EXPAND, 0)
        self.SetSizer(MainSizer)
        self.Layout()
        # end wxGlade

    def OnDumpFilesCopy(self, event):  # wxGlade: MyFrame1.<event_handler>
        print "Event handler 'OnDumpFilesCopy' not implemented!"
        event.Skip()

    def OnSetPath(self, event):  # wxGlade: MyFrame1.<event_handler>
        print "Event handler 'OnSetPath' not implemented!"
        event.Skip()

    def OnCheckBoxSelect(self, event):  # wxGlade: MyFrame1.<event_handler>
        print "Event handler 'OnCheckBoxSelect' not implemented!"
        event.Skip()

    def OnParsing(self, event):  # wxGlade: MyFrame1.<event_handler>
        print "Event handler 'OnParsing' not implemented!"
        event.Skip()

    def OnGoT32(self, event):  # wxGlade: MyFrame1.<event_handler>
        print "Event handler 'OnGoT32' not implemented!"
        event.Skip()

    def OnOpenFolder(self, event):  # wxGlade: MyFrame1.<event_handler>
        print "Event handler 'OnOpenFolder' not implemented!"
        event.Skip()

# end of class MyFrame1
if __name__ == "__main__":
    gettext.install("app") # replace with the appropriate catalog name

    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_Main = MyFrame1(None, wx.ID_ANY, "")
    app.SetTopWindow(frame_Main)
    frame_Main.Show()
    app.MainLoop()