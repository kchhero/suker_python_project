#!/usr/bin/env python
# -*- coding: CP949 -*-
#
# generated by wxGlade 0.6.8 (standalone edition) on Mon Dec 09 08:43:05 2013
#

import wx

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        
        # Menu Bar
        self.frame_1_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        self.menu_file_exit = wx.MenuItem(wxglade_tmp_menu, wx.ID_ANY, _("Exit"), "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendItem(self.menu_file_exit)
        self.frame_1_menubar.Append(wxglade_tmp_menu, _("File"))
        wxglade_tmp_menu = wx.Menu()
        self.menu_help_about = wx.MenuItem(wxglade_tmp_menu, wx.ID_ANY, _("About"), "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendItem(self.menu_help_about)
        self.frame_1_menubar.Append(wxglade_tmp_menu, _("Help"))
        self.SetMenuBar(self.frame_1_menubar)
        # Menu Bar end
        self.label_dumpLocation = wx.StaticText(self, wx.ID_ANY, _(" Dump Files Location"))
        self.text_ctrl_dumpLocation = wx.TextCtrl(self, wx.ID_ANY, "")
        self.button_dumpDir = wx.Button(self, wx.ID_ANY, _("..."))
        self.label_vmlinuxLocation = wx.StaticText(self, wx.ID_ANY, _(" vmlinux Location"))
        self.text_ctrl_vmlinuxLocation = wx.TextCtrl(self, wx.ID_ANY, "")
        self.button_vmlinuxDir = wx.Button(self, wx.ID_ANY, _("..."))
        self.label_address = wx.StaticText(self, wx.ID_ANY, _("   Address  "))
        self.label_start_address = wx.StaticText(self, wx.ID_ANY, _(" Start Addr."))
        self.text_ctrl_start_address = wx.TextCtrl(self, wx.ID_ANY, "")
        self.label_2 = wx.StaticText(self, wx.ID_ANY, _(" Size"))
        self.text_ctrl_size = wx.TextCtrl(self, wx.ID_ANY, "")
        self.button_DoDump = wx.Button(self, wx.ID_ANY, _("Do Dump"))
        self.button_openDir = wx.Button(self, wx.ID_ANY, _("Open Dir"))
        self.text_ctrl_status = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_MULTILINE | wx.TE_READONLY | wx.HSCROLL | wx.TE_RIGHT | wx.TE_LINEWRAP | wx.TE_WORDWRAP)
        self.label_myIdentity = wx.StaticText(self, wx.ID_ANY, _("suker"))

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_MENU, self.OnMenuFileExit, self.menu_file_exit)
        self.Bind(wx.EVT_MENU, self.OnMenuHelpAbout, self.menu_help_about)
        self.Bind(wx.EVT_BUTTON, self.OnSetDumpPath, self.button_dumpDir)
        self.Bind(wx.EVT_BUTTON, self.OnSetVmlinuxPath, self.button_vmlinuxDir)
        self.Bind(wx.EVT_BUTTON, self.OnDoDump, self.button_DoDump)
        self.Bind(wx.EVT_BUTTON, self.OnOpenFolder, self.button_openDir)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle(_("Code Area Dump"))
        _icon = wx.EmptyIcon()
        _icon.CopyFromBitmap(wx.Bitmap("D:\\Project_My\\08_PythonProject\\RamDumpCodeArea\\sukerIcon.png", wx.BITMAP_TYPE_ANY))
        self.SetIcon(_icon)
        self.SetSize((500, 375))
        self.SetBackgroundColour(wx.SystemSettings_GetColour(wx.SYS_COLOUR_3DFACE))
        self.text_ctrl_dumpLocation.SetMinSize((378, 22))
        self.text_ctrl_vmlinuxLocation.SetMinSize((378, 22))
        self.label_start_address.SetMinSize((80, 14))
        self.text_ctrl_start_address.SetMinSize((193, 22))
        self.label_2.SetMinSize((80, 14))
        self.text_ctrl_size.SetMinSize((193, 22))
        self.text_ctrl_status.Enable(False)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        main_main_sizer = wx.BoxSizer(wx.VERTICAL)
        main_sizer = wx.BoxSizer(wx.VERTICAL)
        sizer_low = wx.BoxSizer(wx.HORIZONTAL)
        sizer_middle = wx.BoxSizer(wx.HORIZONTAL)
        sizer_middle_right = wx.BoxSizer(wx.VERTICAL)
        sizer_middle_left = wx.BoxSizer(wx.VERTICAL)
        sizer_middle_right_sub2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_middle_left_sub1 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_upper = wx.BoxSizer(wx.VERTICAL)
        sizer_upper_sub_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_upper_sub_1 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_upper.Add(self.label_dumpLocation, 0, wx.ALL | wx.EXPAND, 3)
        sizer_upper_sub_1.Add(self.text_ctrl_dumpLocation, 80, wx.ALL | wx.EXPAND, 3)
        sizer_upper_sub_1.Add(self.button_dumpDir, 20, wx.ALL | wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 3)
        sizer_upper.Add(sizer_upper_sub_1, 1, wx.ALL | wx.EXPAND, 0)
        sizer_upper.Add(self.label_vmlinuxLocation, 0, wx.ALL | wx.EXPAND, 3)
        sizer_upper_sub_2.Add(self.text_ctrl_vmlinuxLocation, 80, wx.ALL | wx.EXPAND, 3)
        sizer_upper_sub_2.Add(self.button_vmlinuxDir, 20, wx.ALL | wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 3)
        sizer_upper.Add(sizer_upper_sub_2, 1, wx.ALL | wx.EXPAND, 0)
        main_sizer.Add(sizer_upper, 1, wx.ALL | wx.EXPAND, 3)
        sizer_middle_left.Add(self.label_address, 30, wx.ALL | wx.ALIGN_RIGHT | wx.ALIGN_BOTTOM, 3)
        sizer_middle_left_sub1.Add(self.label_start_address, 30, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 3)
        sizer_middle_left_sub1.Add(self.text_ctrl_start_address, 70, wx.ALL | wx.EXPAND, 3)
        sizer_middle_left.Add(sizer_middle_left_sub1, 35, wx.EXPAND, 0)
        sizer_middle_right_sub2.Add(self.label_2, 30, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 3)
        sizer_middle_right_sub2.Add(self.text_ctrl_size, 70, wx.ALL | wx.EXPAND, 3)
        sizer_middle_left.Add(sizer_middle_right_sub2, 35, wx.EXPAND, 0)
        sizer_middle.Add(sizer_middle_left, 60, wx.EXPAND, 0)
        sizer_middle_right.Add(self.button_DoDump, 60, wx.ALL | wx.EXPAND, 3)
        sizer_middle_right.Add(self.button_openDir, 40, wx.ALL | wx.EXPAND, 3)
        sizer_middle.Add(sizer_middle_right, 40, wx.EXPAND, 0)
        main_sizer.Add(sizer_middle, 1, wx.ALL | wx.EXPAND, 3)
        sizer_low.Add(self.text_ctrl_status, 60, wx.ALL | wx.EXPAND, 3)
        sizer_low.Add(self.label_myIdentity, 40, wx.ALL | wx.EXPAND, 3)
        main_sizer.Add(sizer_low, 1, wx.ALL | wx.EXPAND, 3)
        main_main_sizer.Add(main_sizer, 1, wx.EXPAND, 0)
        self.SetSizer(main_main_sizer)
        self.Layout()
        # end wxGlade

    def OnMenuFileExit(self, event):  # wxGlade: MyFrame.<event_handler>
        print "Event handler 'OnMenuFileExit' not implemented!"
        event.Skip()

    def OnMenuHelpAbout(self, event):  # wxGlade: MyFrame.<event_handler>
        print "Event handler 'OnMenuHelpAbout' not implemented!"
        event.Skip()

    def OnSetDumpPath(self, event):  # wxGlade: MyFrame.<event_handler>
        print "Event handler 'OnSetDumpPath' not implemented!"
        event.Skip()

    def OnSetVmlinuxPath(self, event):  # wxGlade: MyFrame.<event_handler>
        print "Event handler 'OnSetVmlinuxPath' not implemented!"
        event.Skip()

    def OnDoDump(self, event):  # wxGlade: MyFrame.<event_handler>
        print "Event handler 'OnDoDump' not implemented!"
        event.Skip()

    def OnOpenFolder(self, event):  # wxGlade: MyFrame.<event_handler>
        print "Event handler 'OnOpenFolder' not implemented!"
        event.Skip()

# end of class MyFrame

class HelpAboutDialog(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: HelpAboutDialog.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.label_about_empty1 = wx.StaticText(self, wx.ID_ANY, "")
        self.bitmap_1 = wx.StaticBitmap(self, wx.ID_ANY, wx.Bitmap("D:\\Project_My\\08_PythonProject\\RamDumpLogAbstractor\\src\\Suker_Abstractor\\SukerTitle.png", wx.BITMAP_TYPE_ANY))
        self.label_usingExplain = wx.StaticText(self, wx.ID_ANY, _("\n1.  \"...\" Button Click >>> Select Ram dump and vmlinux Path\n\n2. \"Do Dump\" Button Click >>> Dump start\n\n3. \"Open Log folder\" Button Click >>> dumped file folder open"), style=wx.ST_NO_AUTORESIZE)
        self.label_usingAboutMe = wx.StaticText(self, wx.ID_ANY, _("created by suker  version 1.0.0 \nchoonghyun.jeon@lge.com  "), style=wx.ALIGN_RIGHT)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: HelpAboutDialog.__set_properties
        self.SetTitle(_("About and Using"))
        _icon = wx.EmptyIcon()
        _icon.CopyFromBitmap(wx.Bitmap("D:\\Project_My\\08_PythonProject\\RamDumpLogAbstractor\\src\\Suker_Abstractor\\sukerRDA_icon.png", wx.BITMAP_TYPE_ANY))
        self.SetIcon(_icon)
        self.SetSize((400, 300))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: HelpAboutDialog.__do_layout
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_2.Add(self.label_about_empty1, 5, wx.ALL | wx.EXPAND, 3)
        sizer_2.Add(self.bitmap_1, 30, wx.EXPAND | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_2.Add(self.label_usingExplain, 45, wx.ALL | wx.EXPAND | wx.ALIGN_BOTTOM, 5)
        sizer_2.Add(self.label_usingAboutMe, 20, wx.ALL | wx.ALIGN_RIGHT | wx.ALIGN_BOTTOM, 5)
        self.SetSizer(sizer_2)
        self.Layout()
        # end wxGlade

# end of class HelpAboutDialog
if __name__ == "__main__":
    gettext.install("app") # replace with the appropriate catalog name

    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = MyFrame(None, wx.ID_ANY, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    app.MainLoop()