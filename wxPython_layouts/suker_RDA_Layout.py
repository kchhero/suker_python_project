#!/usr/bin/env python
# -*- coding: CP949 -*-
#
# generated by wxGlade 0.6.8 (standalone edition) on Wed Nov 12 21:41:52 2014
#

import wx

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
import subprocess
# end wxGlade


class AbstractorShell(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: AbstractorShell.__init__
        kwds["style"] = wx.CAPTION | wx.CLOSE_BOX | wx.MINIMIZE_BOX | wx.MAXIMIZE_BOX | wx.SYSTEM_MENU | wx.RESIZE_BORDER
        wx.Frame.__init__(self, *args, **kwds)
        
        # Menu Bar
        self.frame_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        self.menu_file_exit = wx.MenuItem(wxglade_tmp_menu, wx.ID_ANY, _("Exit"), _("x"), wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendItem(self.menu_file_exit)
        self.frame_menubar.Append(wxglade_tmp_menu, _("&File"))
        wxglade_tmp_menu = wx.Menu()
        self.menu_help_about = wx.MenuItem(wxglade_tmp_menu, wx.ID_ANY, _("About and Using"), _("Help for this program"), wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendItem(self.menu_help_about)
        self.frame_menubar.Append(wxglade_tmp_menu, _("Help"))
        self.SetMenuBar(self.frame_menubar)
        # Menu Bar end
        self.frame_statusbar = self.CreateStatusBar(1, 0)
        self.label_RamDumpPath = wx.StaticText(self, wx.ID_ANY, _(" RamDumpPath"))
        self.text_ctrl_RamDumpPath = wx.TextCtrl(self, wx.ID_ANY, "")
        self.label_upper_right_empty = wx.StaticText(self, wx.ID_ANY, "")
        self.button_RamDumpPath = wx.Button(self, wx.ID_ANY, _("..."))
        self.radio_box_linuxVer = wx.RadioBox(self, wx.ID_ANY, _("Linux Version"), choices=[_("linux version 3.4.x"), _("linux version 3.7.x"), _("linux version 3.10.x")], majorDimension=1, style=wx.RA_SPECIFY_ROWS)
        self.text_ctrl_logs = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_MULTILINE | wx.TE_READONLY | wx.TE_LINEWRAP | wx.TE_WORDWRAP)
        self.radio_box_crashType = wx.RadioBox(self, wx.ID_ANY, _("Crash Type Select"), choices=[_("Kernel Crash(Normal)"), _("ADSP Crash"), _("Modem Crash"), _("TZ Crash"), _("WatchDog Bite")], majorDimension=0, style=wx.RA_SPECIFY_ROWS)
        self.text_ctrl_log_status = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_MULTILINE | wx.TE_READONLY | wx.TE_LINEWRAP | wx.TE_WORDWRAP)
        self.label_1 = wx.StaticText(self, wx.ID_ANY, _("   CrashLog Size (KB)"))
        self.text_ctrl_logSize = wx.TextCtrl(self, wx.ID_ANY, "")
        self.button_Run = wx.Button(self, wx.ID_ANY, _("Run"))
        self.button_OpenDir = wx.Button(self, wx.ID_ANY, _("Open log folder"))
        self.label_lower_empty1 = wx.StaticText(self, wx.ID_ANY, "")
        self.label_lower_sukerMark = wx.StaticText(self, wx.ID_ANY, _("Created by SUKER Version 1.0.0     since Nov. 2013    "), style=wx.ALIGN_RIGHT)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_MENU, self.OnMenuFileExit, self.menu_file_exit)
        self.Bind(wx.EVT_MENU, self.OnMenuHelpAbout, self.menu_help_about)
        self.Bind(wx.EVT_BUTTON, self.OnSetPath, self.button_RamDumpPath)
        self.Bind(wx.EVT_RADIOBOX, self.OnLinuxVerSelect, self.radio_box_linuxVer)
        self.Bind(wx.EVT_RADIOBOX, self.OnRadioSelect, self.radio_box_crashType)
        self.Bind(wx.EVT_BUTTON, self.OnParsing, self.button_Run)
        self.Bind(wx.EVT_BUTTON, self.OnOpenFolder, self.button_OpenDir)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: AbstractorShell.__set_properties
        self.SetTitle(_("Suker RamDump Abstractor"))
        self.SetSize((778, 540))
        self.SetBackgroundColour(wx.SystemSettings_GetColour(wx.SYS_COLOUR_3DFACE))
        self.frame_statusbar.SetStatusWidths([-1])
        # statusbar fields
        frame_statusbar_fields = [_("AnHuiNanGoonHyang")]
        for i in range(len(frame_statusbar_fields)):
            self.frame_statusbar.SetStatusText(frame_statusbar_fields[i], i)
        self.radio_box_linuxVer.SetSelection(2)
        self.text_ctrl_logs.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.radio_box_crashType.SetSelection(0)
        self.text_ctrl_log_status.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_1.SetMinSize((133, 20))
        self.text_ctrl_logSize.SetMinSize((120, 23))
        self.label_lower_sukerMark.SetFont(wx.Font(9, wx.DEFAULT, wx.ITALIC, wx.NORMAL, 0, ""))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: AbstractorShell.__do_layout
        sizer_whole = wx.BoxSizer(wx.VERTICAL)
        sizer_main = wx.BoxSizer(wx.VERTICAL)
        sizer_lower = wx.BoxSizer(wx.HORIZONTAL)
        sizer_middle = wx.BoxSizer(wx.HORIZONTAL)
        sizer_middle_right = wx.BoxSizer(wx.VERTICAL)
        sizer_middle_left = wx.BoxSizer(wx.VERTICAL)
        sizer_middle_left_lower = wx.BoxSizer(wx.VERTICAL)
        sizer_middle_left_upper = wx.BoxSizer(wx.HORIZONTAL)
        self.sizer_upper2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_upper2_left = wx.BoxSizer(wx.HORIZONTAL)
        sizer_upper = wx.BoxSizer(wx.HORIZONTAL)
        sizer_upper_right = wx.BoxSizer(wx.VERTICAL)
        sizer_upper_left = wx.BoxSizer(wx.VERTICAL)
        sizer_upper_left.Add(self.label_RamDumpPath, 0, wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 3)
        sizer_upper_left.Add(self.text_ctrl_RamDumpPath, 0, wx.ALL | wx.EXPAND, 3)
        sizer_upper.Add(sizer_upper_left, 80, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_upper_right.Add(self.label_upper_right_empty, 0, wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 3)
        sizer_upper_right.Add(self.button_RamDumpPath, 0, wx.ALL | wx.EXPAND, 3)
        sizer_upper.Add(sizer_upper_right, 20, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_main.Add(sizer_upper, 10, wx.ALL | wx.EXPAND, 0)
        sizer_upper2_left.Add(self.radio_box_linuxVer, 85, wx.ALL, 0)
        self.sizer_upper2.Add(sizer_upper2_left, 90, wx.ALL | wx.EXPAND, 0)
        sizer_main.Add(self.sizer_upper2, 10, wx.EXPAND, 1)
        sizer_middle_left_upper.Add(self.text_ctrl_logs, 60, wx.ALL | wx.EXPAND, 3)
        sizer_middle_left_upper.Add(self.radio_box_crashType, 30, wx.EXPAND, 0)
        sizer_middle_left.Add(sizer_middle_left_upper, 55, wx.EXPAND, 0)
        sizer_middle_left_lower.Add(self.text_ctrl_log_status, 30, wx.ALL | wx.EXPAND, 3)
        sizer_middle_left.Add(sizer_middle_left_lower, 45, wx.EXPAND, 0)
        sizer_middle.Add(sizer_middle_left, 80, wx.EXPAND, 0)
        sizer_middle_right.Add(self.label_1, 6, wx.TOP | wx.ALIGN_CENTER_HORIZONTAL, 3)
        sizer_middle_right.Add(self.text_ctrl_logSize, 7, wx.BOTTOM | wx.ALIGN_CENTER_HORIZONTAL, 4)
        sizer_middle_right.Add(self.button_Run, 40, wx.ALL | wx.EXPAND, 3)
        sizer_middle_right.Add(self.button_OpenDir, 40, wx.ALL | wx.EXPAND, 3)
        sizer_middle.Add(sizer_middle_right, 20, wx.EXPAND, 1)
        sizer_main.Add(sizer_middle, 75, wx.ALL | wx.EXPAND, 0)
        sizer_lower.Add(self.label_lower_empty1, 50, wx.EXPAND, 3)
        sizer_lower.Add(self.label_lower_sukerMark, 50, wx.EXPAND | wx.ALIGN_RIGHT | wx.ALIGN_CENTER_VERTICAL, 3)
        sizer_main.Add(sizer_lower, 5, wx.ALL | wx.EXPAND, 0)
        sizer_whole.Add(sizer_main, 1, wx.ALL | wx.EXPAND, 0)
        self.SetSizer(sizer_whole)
        self.Layout()
        # end wxGlade

    def OnMenuFileExit(self, event):  # wxGlade: AbstractorShell.<event_handler>
        print "Event handler 'OnMenuFileExit' not implemented!"
        event.Skip()

    def OnMenuHelpAbout(self, event):  # wxGlade: AbstractorShell.<event_handler>
        print "Event handler 'OnMenuHelpAbout' not implemented!"
        event.Skip()

    def OnSetPath(self, event):  # wxGlade: AbstractorShell.<event_handler>
        print "Event handler 'OnSetPath' not implemented!"
        event.Skip()

    def OnLinuxVerSelect(self, event):  # wxGlade: AbstractorShell.<event_handler>
        print "Event handler 'OnLinuxVerSelect' not implemented!"
        event.Skip()

    def OnRadioSelect(self, event):  # wxGlade: AbstractorShell.<event_handler>
        print "Event handler 'OnRadioSelect' not implemented!"
        event.Skip()

    def OnParsing(self, event):  # wxGlade: AbstractorShell.<event_handler>
        print "Event handler 'OnParsing' not implemented!"
        event.Skip()

    def OnOpenFolder(self, event):  # wxGlade: AbstractorShell.<event_handler>
        print "Event handler 'OnOpenFolder' not implemented!"
        event.Skip()

# end of class AbstractorShell

class HelpAboutDialog(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: HelpAboutDialog.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.label_about_empty1 = wx.StaticText(self, wx.ID_ANY, "")
        self.bitmap_1 = wx.StaticBitmap(self, wx.ID_ANY, wx.Bitmap("D:\\Project_My\\08_PythonProject\\RamDumpLogAbstractor\\src\\Suker_Abstractor\\SukerTitle.png", wx.BITMAP_TYPE_ANY))
        self.label_usingExplain = wx.StaticText(self, wx.ID_ANY, _("\n1.  \"...\" Button Click >>> Select Ram dump Path\n\n2. \"Run\" Button Click >>> Do Parsing\n\n3. \"Open Log folder\" Button Click >>> parsed log file folder open"), style=wx.ST_NO_AUTORESIZE)
        self.label_usingAboutMe = wx.StaticText(self, wx.ID_ANY, _("created by suker  version 1.0.0 \nchoonghyun.jeon@lge.com  "), style=wx.ALIGN_RIGHT)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: HelpAboutDialog.__set_properties
        self.SetTitle(_("About and Using"))
        self.SetSize((400, 300))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: HelpAboutDialog.__do_layout
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_2.Add(self.label_about_empty1, 5, wx.ALL | wx.EXPAND, 3)
        sizer_2.Add(self.bitmap_1, 30, wx.EXPAND | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_2.Add(self.label_usingExplain, 45, wx.ALL | wx.EXPAND | wx.ALIGN_BOTTOM, 5)
        sizer_2.Add(self.label_usingAboutMe, 20, wx.ALL | wx.ALIGN_RIGHT | wx.ALIGN_BOTTOM, 5)
        self.SetSizer(sizer_2)
        self.Layout()
        # end wxGlade

# end of class HelpAboutDialog
if __name__ == "__main__":
    gettext.install("SukerRamDumpAbstractor") # replace with the appropriate catalog name

    SukerRamDumpAbstractor = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_Main = AbstractorShell(None, wx.ID_ANY, "")
    SukerRamDumpAbstractor.SetTopWindow(frame_Main)
    frame_Main.Show()
    SukerRamDumpAbstractor.MainLoop()